//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Input/RaceInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @RaceInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @RaceInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""RaceInput"",
    ""maps"": [
        {
            ""name"": ""P1"",
            ""id"": ""1d974043-b789-49a9-aad6-98f46cf57867"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""05171e0f-7372-4f2b-a3e2-27fe468bb7ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Button"",
                    ""id"": ""2d39bc27-0dd7-4b5c-bea9-5c4d633f5d6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""ad0ff618-7176-4dad-b94f-cf4ac922aa13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": "" Jump"",
                    ""type"": ""Button"",
                    ""id"": ""aa7b9aaa-888d-4da5-a61e-81eb3a6bd849"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""8ea8d355-b6fb-44f4-9cd1-7730e8302d44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""3b2a7918-6e10-46da-8862-6635c4b82ba4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0a4c8f80-6a3f-46c3-ab75-28777238983b"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""27c80248-18cf-4005-ae1a-1dc9fc5a33fc"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""bdf04caa-7f94-478e-9e50-57610b32ba64"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d4a02681-b773-49d2-b88e-3dc16deaa66e"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""db7fc0aa-208b-4912-8749-57c2e13a62fa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""23efa5f8-936f-4f32-8dd7-b3a98c0d0eef"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56d8b4ec-b0a5-4270-ae47-dce727a070f6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": "" Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a3fedee-ec45-4c7b-91b2-6a7569f02550"",
                    ""path"": ""<Keyboard>/#(R)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""P2"",
            ""id"": ""3aba7778-7fd0-44d2-b65d-af6b17595911"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""158435ea-7e33-40aa-a614-8d12b86900fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Button"",
                    ""id"": ""312bffee-bf9f-415b-b6e9-1b1cc01c7c4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""7e5b0777-31ee-4b95-b325-bafdf907e5d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": "" Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6f9c7a2a-c091-4ce0-847a-9a573c75ddde"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""05bf7139-0649-4596-a58c-3ee84c9c2d66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8e6e2b05-c767-4fd2-a687-673890ce9bc3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d2426dc3-bbf1-4ea9-b80e-4b692a83c3dc"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3c50bd0e-1923-4ce4-86d6-de76b74d58f5"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""ee97a437-e267-4c00-8a2b-6a609597e237"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9f45d1a3-d269-4057-9dc7-60f269e750fd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d1b72da9-f0fa-4e05-a027-e73251a6d7c5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9269c932-37cc-477e-ab9e-1de8a3e5dfde"",
                    ""path"": ""<Keyboard>/pageUp"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e4bc9e9-7f5c-4b1c-987e-1d3fe3861859"",
                    ""path"": ""<Keyboard>/pageDown"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": "" Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccf7e21a-03f0-4b43-b9c4-7eb138703964"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // P1
        m_P1 = asset.FindActionMap("P1", throwIfNotFound: true);
        m_P1_Accelerate = m_P1.FindAction("Accelerate", throwIfNotFound: true);
        m_P1_Turn = m_P1.FindAction("Turn", throwIfNotFound: true);
        m_P1_Nitro = m_P1.FindAction("Nitro", throwIfNotFound: true);
        m_P1_Jump = m_P1.FindAction(" Jump", throwIfNotFound: true);
        m_P1_Respawn = m_P1.FindAction("Respawn", throwIfNotFound: true);
        // P2
        m_P2 = asset.FindActionMap("P2", throwIfNotFound: true);
        m_P2_Accelerate = m_P2.FindAction("Accelerate", throwIfNotFound: true);
        m_P2_Turn = m_P2.FindAction("Turn", throwIfNotFound: true);
        m_P2_Nitro = m_P2.FindAction("Nitro", throwIfNotFound: true);
        m_P2_Jump = m_P2.FindAction(" Jump", throwIfNotFound: true);
        m_P2_Respawn = m_P2.FindAction("Respawn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // P1
    private readonly InputActionMap m_P1;
    private IP1Actions m_P1ActionsCallbackInterface;
    private readonly InputAction m_P1_Accelerate;
    private readonly InputAction m_P1_Turn;
    private readonly InputAction m_P1_Nitro;
    private readonly InputAction m_P1_Jump;
    private readonly InputAction m_P1_Respawn;
    public struct P1Actions
    {
        private @RaceInput m_Wrapper;
        public P1Actions(@RaceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_P1_Accelerate;
        public InputAction @Turn => m_Wrapper.m_P1_Turn;
        public InputAction @Nitro => m_Wrapper.m_P1_Nitro;
        public InputAction @Jump => m_Wrapper.m_P1_Jump;
        public InputAction @Respawn => m_Wrapper.m_P1_Respawn;
        public InputActionMap Get() { return m_Wrapper.m_P1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P1Actions set) { return set.Get(); }
        public void SetCallbacks(IP1Actions instance)
        {
            if (m_Wrapper.m_P1ActionsCallbackInterface != null)
            {
                @Accelerate.started -= m_Wrapper.m_P1ActionsCallbackInterface.OnAccelerate;
                @Accelerate.performed -= m_Wrapper.m_P1ActionsCallbackInterface.OnAccelerate;
                @Accelerate.canceled -= m_Wrapper.m_P1ActionsCallbackInterface.OnAccelerate;
                @Turn.started -= m_Wrapper.m_P1ActionsCallbackInterface.OnTurn;
                @Turn.performed -= m_Wrapper.m_P1ActionsCallbackInterface.OnTurn;
                @Turn.canceled -= m_Wrapper.m_P1ActionsCallbackInterface.OnTurn;
                @Nitro.started -= m_Wrapper.m_P1ActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_P1ActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_P1ActionsCallbackInterface.OnNitro;
                @Jump.started -= m_Wrapper.m_P1ActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_P1ActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_P1ActionsCallbackInterface.OnJump;
                @Respawn.started -= m_Wrapper.m_P1ActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_P1ActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_P1ActionsCallbackInterface.OnRespawn;
            }
            m_Wrapper.m_P1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Accelerate.started += instance.OnAccelerate;
                @Accelerate.performed += instance.OnAccelerate;
                @Accelerate.canceled += instance.OnAccelerate;
                @Turn.started += instance.OnTurn;
                @Turn.performed += instance.OnTurn;
                @Turn.canceled += instance.OnTurn;
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
            }
        }
    }
    public P1Actions @P1 => new P1Actions(this);

    // P2
    private readonly InputActionMap m_P2;
    private IP2Actions m_P2ActionsCallbackInterface;
    private readonly InputAction m_P2_Accelerate;
    private readonly InputAction m_P2_Turn;
    private readonly InputAction m_P2_Nitro;
    private readonly InputAction m_P2_Jump;
    private readonly InputAction m_P2_Respawn;
    public struct P2Actions
    {
        private @RaceInput m_Wrapper;
        public P2Actions(@RaceInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_P2_Accelerate;
        public InputAction @Turn => m_Wrapper.m_P2_Turn;
        public InputAction @Nitro => m_Wrapper.m_P2_Nitro;
        public InputAction @Jump => m_Wrapper.m_P2_Jump;
        public InputAction @Respawn => m_Wrapper.m_P2_Respawn;
        public InputActionMap Get() { return m_Wrapper.m_P2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P2Actions set) { return set.Get(); }
        public void SetCallbacks(IP2Actions instance)
        {
            if (m_Wrapper.m_P2ActionsCallbackInterface != null)
            {
                @Accelerate.started -= m_Wrapper.m_P2ActionsCallbackInterface.OnAccelerate;
                @Accelerate.performed -= m_Wrapper.m_P2ActionsCallbackInterface.OnAccelerate;
                @Accelerate.canceled -= m_Wrapper.m_P2ActionsCallbackInterface.OnAccelerate;
                @Turn.started -= m_Wrapper.m_P2ActionsCallbackInterface.OnTurn;
                @Turn.performed -= m_Wrapper.m_P2ActionsCallbackInterface.OnTurn;
                @Turn.canceled -= m_Wrapper.m_P2ActionsCallbackInterface.OnTurn;
                @Nitro.started -= m_Wrapper.m_P2ActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_P2ActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_P2ActionsCallbackInterface.OnNitro;
                @Jump.started -= m_Wrapper.m_P2ActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_P2ActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_P2ActionsCallbackInterface.OnJump;
                @Respawn.started -= m_Wrapper.m_P2ActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_P2ActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_P2ActionsCallbackInterface.OnRespawn;
            }
            m_Wrapper.m_P2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Accelerate.started += instance.OnAccelerate;
                @Accelerate.performed += instance.OnAccelerate;
                @Accelerate.canceled += instance.OnAccelerate;
                @Turn.started += instance.OnTurn;
                @Turn.performed += instance.OnTurn;
                @Turn.canceled += instance.OnTurn;
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
            }
        }
    }
    public P2Actions @P2 => new P2Actions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IP1Actions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnNitro(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
    }
    public interface IP2Actions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnNitro(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
    }
}
